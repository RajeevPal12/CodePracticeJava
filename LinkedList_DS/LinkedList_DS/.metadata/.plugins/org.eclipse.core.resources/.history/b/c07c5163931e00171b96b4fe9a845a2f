package com.trie.practice;

import java.util.Vector;

public class TrieInsertAndSearch {

	static class Node{
		Vector<Node> child;
		boolean isleaf;
		Node(){
			child=new Vector<>();
		}
	}
	public static void insert(Node node,char[] arr){
		
		
		
	}
	public static void main(String[] args) {
		
		 // Input keys (use only 'a' through 'z' and lower case)
	    String keys[] = {"the", "a", "there", "answer", "any",
	                     "by", "bye", "their"};
	 
	    Node root = new Node();
	    // Construct trie
	    for (int i = 0; i < keys.length; i++)
	        insert(root, keys[i].toCharArray());
	    
	    
	 /*
	    // Search for different keys
	    System.out.println("  the:"+search(root, "the".toCharArray()) );
	    System.out.println("  these:"+ search(root, "these".toCharArray()) );
	    System.out.println("  their:"+ search(root, "their".toCharArray()) );
	    System.out.println("  thaw:"+ search(root, "thaw".toCharArray()));
	    deleteNodes(root,"the".toCharArray());
	    System.out.println("  the:"+search(root, "the".toCharArray()) );
	    */
	}
}
