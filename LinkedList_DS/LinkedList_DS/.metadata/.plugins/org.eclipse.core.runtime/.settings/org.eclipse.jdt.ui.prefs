content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="com.ll.beans.OuterClass"><rhs name\="com.ll.beans.OuterClass"/></lhs><lhs name\="com.ll.beans.OuterClass$Inner"><rhs name\="com.ll.beans.OuterClass$Inner"/></lhs><lhs name\="com.ll.beans.LinkedList"><rhs name\="com.ll.beans.LinkedList"/></lhs><lhs name\="com.ll.beans.LinkedList$NodeDL"><rhs name\="com.ll.beans.LinkedList$NodeDL"/></lhs><lhs name\="com.ll.service.LinkList"><rhs name\="com.ll.service.LinkList"/></lhs><lhs name\="com.ll.service.LinkedList"><rhs name\="com.ll.service.LinkedList"/></lhs><lhs name\="com.ll.service.LinkedList$Node"><rhs name\="com.ll.service.LinkedList$Node"/></lhs><lhs name\="java.util.Iterator"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.util.Scanner"/></lhs><lhs name\="com.ll.service.UnRolledLinkedList$Node1"><rhs name\="com.ll.service.UnRolledLinkedList$Node1"/></lhs><lhs name\="com.ll.service.LinkedList$TNode"><rhs name\="com.ll.service.LinkedList$TNode"/></lhs><lhs name\="com.ll.service.SkipCoordinateBtwSaLInLine$Node"><rhs name\="com.ll.service.SkipCoordinateBtwSaLInLine$Node"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.lang.Integer"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.StringBuffer"/><rhs name\="java.lang.String"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuffer"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuffer"/></lhs><lhs name\="RedixSort$Queues$Queue"><rhs name\="RedixSort$Queues$Queue"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.Deque"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.Date"/><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.concurrent.ArrayBlockingQueue"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.concurrent.PriorityBlockingQueue"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.HashSet"/><rhs name\="java.util.concurrent.ArrayBlockingQueue"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.concurrent.PriorityBlockingQueue"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.Queue"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.concurrent.ArrayBlockingQueue"/><rhs name\="java.util.concurrent.PriorityBlockingQueue"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.AbstractSequentialList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.LinkedList"/><rhs name\="java.util.ArrayList"/><rhs name\="java.util.TreeSet"/><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.LinkedList"><rhs name\="java.util.LinkedList"/></lhs><lhs name\="java.util.Vector"><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.ArrayList"/><rhs name\="java.util.Stack"/><rhs name\="java.util.Vector"/></lhs><lhs name\="java.util.Stack"><rhs name\="java.util.Stack"/></lhs><lhs name\="com.st.service.TapologicalSorting$Graph"><rhs name\="com.st.service.TapologicalSorting$Graph"/></lhs><lhs name\="com.gp.service.ShartestPathInDirectedACyclicGraph$Graph"><rhs name\="com.gp.service.ShartestPathInDirectedACyclicGraph$Graph"/></lhs><lhs name\="com.sa.creat.service.SuffixArrCreation$Suffix"><rhs name\="com.sa.creat.service.SuffixArrCreation$Suffix"/></lhs><lhs name\="com.st.service.Employee"><rhs name\="com.st.service.Employee"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.HashSet"/><rhs name\="java.util.TreeSet"/></lhs><lhs name\="com.trie.service.TrieInsertAndSearch$TriesNode"><rhs name\="com.trie.service.TrieInsertAndSearch$TriesNode"/></lhs><lhs name\="java.util.ArrayList"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="com.gp.service.DijkstraAlgorithm$Edge"><rhs name\="com.gp.service.DijkstraAlgorithm$Edge"/></lhs><lhs name\="com.gp.service.DijkstraAlgorithm$Graph"><rhs name\="com.gp.service.DijkstraAlgorithm$Graph"/></lhs><lhs name\="com.gp.service.PrimsAlgorithm$Edge"><rhs name\="com.gp.service.PrimsAlgorithm$Edge"/></lhs><lhs name\="com.gp.service.KrushkalsAlgorithm$Edge"><rhs name\="com.gp.service.KrushkalsAlgorithm$Edge"/></lhs><lhs name\="SnakeLadderProblems$queueEntry"><rhs name\="SnakeLadderProblems$queueEntry"/></lhs><lhs name\="MinimumNumberOfJumpsToReachEnd"><rhs name\="MinimumNumberOfJumpsToReachEnd"/></lhs><lhs name\="KnightsTourProblem"><rhs name\="KnightsTourProblem"/></lhs><lhs name\="NQueenProblems"><rhs name\="NQueenProblems"/></lhs><lhs name\="java.lang.IllegalArgumentException"><rhs name\="java.lang.NumberFormatException"/></lhs><lhs name\="java.lang.RuntimeException"><rhs name\="java.lang.NumberFormatException"/></lhs><lhs name\="java.lang.Exception"><rhs name\="java.lang.NumberFormatException"/></lhs><lhs name\="java.lang.Throwable"><rhs name\="java.lang.NumberFormatException"/></lhs><lhs name\="java.lang.NumberFormatException"><rhs name\="java.lang.NumberFormatException"/></lhs><lhs name\="java.util.Enumeration"><rhs name\="java.util.StringTokenizer"/></lhs><lhs name\="java.util.StringTokenizer"><rhs name\="java.util.StringTokenizer"/></lhs><lhs name\="com.gfg.problems.BacktrackingSet7Sudoku$Blok"><rhs name\="com.gfg.problems.BacktrackingSet7Sudoku$Blok"/></lhs><lhs name\="com.gfg.problems.FindPathsFromCornerCellToMiddleCellInMaze$Possition"><rhs name\="com.gfg.problems.FindPathsFromCornerCellToMiddleCellInMaze$Possition"/></lhs><lhs name\="com.gfg.problems.RemoveInvalidParentheses"><rhs name\="com.gfg.problems.RemoveInvalidParentheses"/></lhs><lhs name\="com.gfg.practice_mix.LengthOfLargestRegionOfOnes$Possition"><rhs name\="com.gfg.practice_mix.LengthOfLargestRegionOfOnes$Possition"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.TreeMap"/></lhs><lhs name\="java.util.NavigableSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.SortedSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.AbstractSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="java.util.TreeSet"><rhs name\="java.util.TreeSet"/></lhs><lhs name\="com.gfg.practice_mix.NumbersGameForTwoPlayer$Factors"><rhs name\="com.gfg.practice_mix.NumbersGameForTwoPlayer$Factors"/></lhs><lhs name\="com.gfg.microsoft.MedianInAStreamOfIntegers$MinHeap"><rhs name\="com.gfg.microsoft.MedianInAStreamOfIntegers$MinHeap"/></lhs><lhs name\="com.sa.creat.service.SuffixTreeUsingUkkonensAlgorithms_Stage1$Node"><rhs name\="com.sa.creat.service.SuffixTreeUsingUkkonensAlgorithms_Stage1$Node"/></lhs><lhs name\="com.sa.creat.service.LongestCommonPreffixArrayUsingSuffixArray$Suffix"><rhs name\="com.sa.creat.service.LongestCommonPreffixArrayUsingSuffixArray$Suffix"/></lhs><lhs name\="PrintBinaryTreeInVerticalOrderUsingLevelOrderTraversal$Pair"><rhs name\="PrintBinaryTreeInVerticalOrderUsingLevelOrderTraversal$Pair"/></lhs><lhs name\="PrintBinaryTreeInVerticalOrderUsingLevelOrderTraversal$Queue"><rhs name\="PrintBinaryTreeInVerticalOrderUsingLevelOrderTraversal$Queue"/></lhs><lhs name\="ImplementaPhoneDirectory$Node"><rhs name\="ImplementaPhoneDirectory$Node"/></lhs><lhs name\="com.trie.practice.PrintAllWordsmatchingAPatternInCamelCaseNotationDictonary$TrieNode"><rhs name\="com.trie.practice.PrintAllWordsmatchingAPatternInCamelCaseNotationDictonary$TrieNode"/></lhs><lhs name\="com.trie.practice.FindLastUniqueURLFromLongListOfURLsInAingleTraversal$TrieNode"><rhs name\="com.trie.practice.FindLastUniqueURLFromLongListOfURLsInAingleTraversal$TrieNode"/></lhs><lhs name\="com.trie.practice.FindLastUniqueURLFromLongListOfURLsInAingleTraversal$DLLNode"><rhs name\="com.trie.practice.FindLastUniqueURLFromLongListOfURLsInAingleTraversal$DLLNode"/></lhs><lhs name\="java.util.Date"><rhs name\="java.util.Date"/></lhs><lhs name\="DataStructureForASingleResourceReservations$Node"><rhs name\="DataStructureForASingleResourceReservations$Node"/></lhs><lhs name\="FindANumberInMinimumStep$Que"><rhs name\="FindANumberInMinimumStep$Que"/></lhs><lhs name\="FindANumberInMinimumStep$Number"><rhs name\="FindANumberInMinimumStep$Number"/></lhs><lhs name\="MaximumRectangularAreaInHistogram$Stak"><rhs name\="MaximumRectangularAreaInHistogram$Stak"/></lhs><lhs name\="CheckifAllLeavesAreAtSameLevel$Lavel"><rhs name\="CheckifAllLeavesAreAtSameLevel$Lavel"/></lhs><lhs name\="DiameterOfAnNAryTree$Node"><rhs name\="DiameterOfAnNAryTree$Node"/></lhs><lhs name\="LongestPathInAnUndirectedTree$Graph$MaxCount"><rhs name\="LongestPathInAnUndirectedTree$Graph$MaxCount"/></lhs><lhs name\="com.gp.service.HamiltonianCycle$Graph"><rhs name\="com.gp.service.HamiltonianCycle$Graph"/></lhs><lhs name\="com.gp.service.HamiltonianCycle"><rhs name\="com.gp.service.HamiltonianCycle"/></lhs><lhs name\="com.gp.service.TravellingSalesmanProblemMST$Edge"><rhs name\="com.gp.service.TravellingSalesmanProblemMST$Edge"/></lhs><lhs name\="com.gp.service.TravelingSalesmanProblem$Graph$LiveNode"><rhs name\="com.gp.service.TravelingSalesmanProblem$Graph$LiveNode"/></lhs></history>
content_assist_number_of_computers=28
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
markOccurrences=false
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=12
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Consolas|10.0|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Consolas;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
